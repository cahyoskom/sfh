image: node:latest

stages:
  - build
  - deploy

build_dev:  # A job to build the static website - replace it with your build methods
  image: weltn24/up-docker-node-chrome-headless
  stage: build
  variables:
    FILE_NAME: sfh_web.zip
  before_script:
    - apt-get install zip unzip
  script:
    - npm install
    - CI=false npm run build
    - cd build; zip -r ../${FILE_NAME} .
  artifacts:
    paths:
      - ${FILE_NAME}  # This is what we want to publish, replace with your `dist` directory
  only:
    - dev

deploy_dev:
  stage: deploy
  variables:
    FILE_NAME: sfh_web.zip
    ZIP_PATH: /home/deploy/
    #DEPLOY_USER: deploy@188.165.197.19
    #DEPLOY_PATH: /usr/share/nginx/html/jotun-backoffice/
    DEPLOY_USER: deploy@144.91.77.116
    DEPLOY_PATH: /var/www/karpadev.karpalabs.com/public_html/sfh_web/
    ENV_NAME: dev
    #ENV_URL: http://188.165.197.19/jotun-backoffice
    ENV_URL: http://karpadev.karpalabs.com/sfh_web
  before_script:
    - apt-get update -qq
    - apt-get install -qq git
    # Setup SSH deploy keys
    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "${SSH_PRIVATE_KEY}")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh ${DEPLOY_USER} rm -rf ${DEPLOY_PATH}*
    - ssh ${DEPLOY_USER} rm -rf ${ZIP_PATH}${FILE_NAME}
    - scp ${FILE_NAME} ${DEPLOY_USER}:${ZIP_PATH}
    - ssh ${DEPLOY_USER} unzip -o ${FILE_NAME} -d ${DEPLOY_PATH}
    #- ssh ${DEPLOY_USER} 'sed -i "s/\/assets/\/jotun-backoffice\/assets/g" /usr/share/nginx/html/jotun-backoffice/static/css/main.*.chunk.css'
    - ssh ${DEPLOY_USER} 'sed -i "s/\/assets/\/sfh_web\/assets/g" /var/www/karpadev.karpalabs.com/public_html/sfh_web/static/css/main.*.chunk.css'
  environment:
    name: ${ENV_NAME}
    url: ${ENV_URL}
  only:
    - dev
